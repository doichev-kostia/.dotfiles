// https://zed.dev/docs/key-bindings
[
	{
		"context": "Workspace",
		"bindings": {
			"ctrl-shift-r": [
				"task::Spawn",
				{
					"task_name": "vitest"
				}
			],
			"cmd-k": [
				"task::Spawn",
				{
					"task_name": "lazygit",
					"reveal_target": "center"
				}
			]
		}
	},
	{
		"context": "Editor && showing_completions",
		"bindings": {
			"ctrl-y": "editor::ConfirmCompletion"
		}
	},
	{
		"context": "Editor",
		"bindings": {
			"ctrl-s": "copilot::Suggest",
			"ctrl-y": "editor::AcceptEditPrediction",
			"cmd-e": "file_finder::Toggle",
			"alt-g": null,
			"alt-alt-up": "editor::AddSelectionAbove",
			"alt-alt-down": "editor::AddSelectionBelow",
		}
	},
	{
		"context": "Editor && vim_mode == normal",
		"bindings": {
			// most of them are the Zed defaults
			"gd": "editor::GoToDefinition",
			"gD": "editor::GoToDeclaration",
			"gy": "editor::GoToTypeDefinition",
			"gI": "editor::GoToImplementation"
			// Go to All references to the current word	g A
			// Find symbol in current file	g s
			// Find symbol in entire project	g S
			// Go to next diagnostic	g ] or ] d
			// Go to previous diagnostic	g [ or [ d
			// Show inline error (hover)	g h
			// Open the code actions menu	g .
		}
	},
	{
		"context": "Editor && (vim_mode == normal || vim_mode == visual) && !VimWaiting && !menu",
		"bindings": {
			"space": null,
			"space g r": "editor::FindAllReferences",
			"space r n": "editor::Rename",
			"space d d": "diagnostics::Deploy"
		}
	},
	{
		"context": "Editor && (vim_mode == normal || vim_mode == visual) && !VimWaiting && !menu",
		"bindings": {
			"space": null,
			"space p f": "workspace::ToggleLeftDock"
		}
	},
	{
		"context": "ProjectPanel && not_editing",
		"bindings": {
			"space p f": "workspace::ToggleLeftDock"
		}
	},
	{
		"context": "Editor && vim_mode == visual",
		"bindings": {
			"space y": "editor::Copy"
		}
	},
	{
		"context": "Editor && vim_mode == insert",
		"bindings": {
			"ctrl-h": "editor::ShowSignatureHelp"
		}
	},
	{
		"context": "Editor && mode == full",
		"bindings": {
			"cmd-down": "editor::OpenExcerpts"
		}
	},
	{
		"context": "Editor",
		"bindings": {
			"ctrl-g": [
				"editor::SelectNext",
				{
					"replace_newest": false
				}
			], // Add selection to Next Find Match
			"ctrl-shift-g": [
				"editor::SelectPrevious",
				{
					"replace_newest": false
				}
			]
		}
	}
]
